buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.2"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // Kuxe: You probably must install google-play-services and google repository from Android SDK manager in order to get google-maps to work
    compile 'com.google.android.gms:play-services:4.2.+'
    // You must install or update the Support Repository through the SDK manager to use this dependency.
    compile 'com.android.support:appcompat-v7:19.+'
    compile 'org.slf4j:slf4j-android:1.7.7'
}
task downloadSDP(type: MyDownload) {
    sourceUrl = 'http://developer.lindholmen.se/repo/artifacts/SDP/1.0/SDP-1.0.jar'
    target = file('libs/SDP-1.0-SNAPSHOT.jar')
}

task downloadVilConfig(type: MyDownload) {
    sourceUrl = 'http://developer.lindholmen.se/repo/artifacts/VIL/1.0/VIL-1.0.jar'
    target = file('libs/VIL-1.0-SNAPSHOT.jar')
}

task downloadAutomotiveAPI(type: MyDownload) {
    sourceUrl = 'http://developer.lindholmen.se/repo/artifacts/Automotive-API/1.0/Automotive-API-1.0.jar'
    target = file('libs/Automotive-API-1.0-SNAPSHOT.jar')
}

class MyDownload extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
        ant.get(src: sourceUrl, dest: target)
    }
}
task libsClean(type: Delete) {
    delete 'app/libs'
}
preBuild.dependsOn downloadSDP
preBuild.dependsOn downloadVilConfig
preBuild.dependsOn downloadAutomotiveAPI
